syntax = "proto3";

package network.scorum.v1;

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";

import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/scorum/cosmos-network/x/scorum/types";

// Params defines the parameters for the module.
message Params {
  option (gogoproto.goproto_stringer) = false;

  repeated string supervisors = 1;

  bytes gas_limit = 2 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  bytes gas_unconditioned_amount = 3 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  bytes gas_adjust_coefficient = 4 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];

  ValidatorsRewardParams validators_reward = 5 [(gogoproto.nullable) = false];
}

message ValidatorsRewardParams {
  string pool_address = 1;
  cosmos.base.v1beta1.Coin block_reward = 2 [(gogoproto.nullable) = false];
}