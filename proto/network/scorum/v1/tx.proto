syntax = "proto3";

package network.scorum.v1;

option go_package = "github.com/scorum/cosmos-network/x/scorum/types";

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";

import "cosmos/msg/v1/msg.proto";
import "cosmos/base/v1beta1/coin.proto";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc Burn(MsgBurn) returns (MsgBurnResponse);
  rpc Mint(MsgMint) returns (MsgMintResponse);
  rpc MintGas(MsgMintGas) returns (MsgMintGasResponse);
}

message MsgBurn {
  option (cosmos.msg.v1.signer) = "supervisor";
  option (amino.name)           = "scorum/MsgBurn";

  string supervisor = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}
message MsgBurnResponse {}

message MsgMintGas {
  option (cosmos.msg.v1.signer) = "supervisor";
  option (amino.name)           = "scorum/MsgMintGas";

  string supervisor = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  bytes amount = 3 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
}
message MsgMintGasResponse {}

// MsgMint is a gov proposal for minting assets.
message MsgMint {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name)           = "scorum/MsgMint";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string recipient = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount = 3 [(gogoproto.nullable) = false];
}

message MsgMintResponse {}